// <auto-generated />
using System;
using FinWiseFinance.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinWiseFinance.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(FinWiseFinanceDbContext))]
    partial class FinWiseFinanceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinWiseFinance.Core.Entities.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("Bank", (string)null);
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("IdBank")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("InstallmentStart")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Observation")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("TotalAmountDue")
                        .HasMaxLength(18)
                        .HasColumnType("DECIMAL (18,2)");

                    b.Property<int>("TotalInstallments")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdBank");

                    b.HasIndex("IdUser");

                    b.ToTable("Bill", (string)null);
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.CompanyBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("CompanyBranch", (string)null);
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.DailyExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasMaxLength(18)
                        .HasColumnType("DECIMAL (18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<bool>("Daily")
                        .HasColumnType("bit");

                    b.Property<bool>("DeductMonthlyIncome")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("IdBank")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("IdBank");

                    b.HasIndex("IdUser");

                    b.ToTable("DailyExpense", (string)null);
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.InstallmentBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BarCode")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("Due")
                        .HasColumnType("DATETIME");

                    b.Property<int?>("IdBank")
                        .HasColumnType("int");

                    b.Property<int>("IdBill")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int>("Installment")
                        .HasColumnType("int");

                    b.Property<decimal>("InstallmentAmount")
                        .HasMaxLength(18)
                        .HasColumnType("DECIMAL (18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdBank");

                    b.HasIndex("IdBill");

                    b.HasIndex("IdUser");

                    b.ToTable("InstallmentBill", (string)null);
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.Profession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Profession", (string)null);
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.PurchaseObjectiveHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasMaxLength(18)
                        .HasColumnType("DECIMAL (18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("IdPurchaseTarget")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("IdPurchaseTarget");

                    b.HasIndex("IdUser");

                    b.ToTable("PurchaseObjectiveHistory", (string)null);
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.PurchaseTarget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasMaxLength(18)
                        .HasColumnType("DECIMAL (18,2)");

                    b.Property<bool>("CombinedHistory")
                        .HasColumnType("bit");

                    b.Property<decimal>("CombinedTotal")
                        .HasMaxLength(18)
                        .HasColumnType("DECIMAL (18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<bool>("DeductMonthlyIncome")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("IdBank")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<bool>("Purchased")
                        .HasColumnType("bit");

                    b.Property<decimal>("SpecifiedValue")
                        .HasMaxLength(18)
                        .HasColumnType("DECIMAL (18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("IdBank");

                    b.HasIndex("IdUser");

                    b.ToTable("PurchaseTarget", (string)null);
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("CorporateReason")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DayOfReceipt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("IdCompanyBranch")
                        .HasColumnType("INT")
                        .HasColumnName("IdCompanyBranch");

                    b.Property<decimal>("Income")
                        .HasMaxLength(18)
                        .HasColumnType("DECIMAL (18,2)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("TypeSalary")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCompanyBranch");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.UserProfession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<int>("IdProfession")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProfession");

                    b.HasIndex("IdUser");

                    b.ToTable("UserProfession", (string)null);
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.Bill", b =>
                {
                    b.HasOne("FinWiseFinance.Core.Entities.Bank", "Bank")
                        .WithMany("Bills")
                        .HasForeignKey("IdBank")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FinWiseFinance.Core.Entities.User", "User")
                        .WithMany("Bills")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.DailyExpense", b =>
                {
                    b.HasOne("FinWiseFinance.Core.Entities.Bank", "Bank")
                        .WithMany("DailyExpenses")
                        .HasForeignKey("IdBank")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FinWiseFinance.Core.Entities.User", "User")
                        .WithMany("DailyExpenses")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.InstallmentBill", b =>
                {
                    b.HasOne("FinWiseFinance.Core.Entities.Bank", "Bank")
                        .WithMany("InstallmentBills")
                        .HasForeignKey("IdBank")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FinWiseFinance.Core.Entities.Bill", "Bill")
                        .WithMany("InstallmentBills")
                        .HasForeignKey("IdBill")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FinWiseFinance.Core.Entities.User", "User")
                        .WithMany("InstallmentBills")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("Bill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.PurchaseObjectiveHistory", b =>
                {
                    b.HasOne("FinWiseFinance.Core.Entities.PurchaseTarget", "PurchaseTarget")
                        .WithMany("PurchaseObjectiveHistories")
                        .HasForeignKey("IdPurchaseTarget")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FinWiseFinance.Core.Entities.User", "User")
                        .WithMany("PurchaseObjectiveHistories")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PurchaseTarget");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.PurchaseTarget", b =>
                {
                    b.HasOne("FinWiseFinance.Core.Entities.Bank", "Bank")
                        .WithMany("PurchaseTargets")
                        .HasForeignKey("IdBank")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FinWiseFinance.Core.Entities.User", "User")
                        .WithMany("PurchaseTargets")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.User", b =>
                {
                    b.HasOne("FinWiseFinance.Core.Entities.CompanyBranch", "CompanyBranch")
                        .WithMany("Users")
                        .HasForeignKey("IdCompanyBranch")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CompanyBranch");
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.UserProfession", b =>
                {
                    b.HasOne("FinWiseFinance.Core.Entities.Profession", "Profession")
                        .WithMany("UserProfessions")
                        .HasForeignKey("IdProfession")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FinWiseFinance.Core.Entities.User", "User")
                        .WithMany("UserProfessions")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Profession");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.Bank", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("DailyExpenses");

                    b.Navigation("InstallmentBills");

                    b.Navigation("PurchaseTargets");
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.Bill", b =>
                {
                    b.Navigation("InstallmentBills");
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.CompanyBranch", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.Profession", b =>
                {
                    b.Navigation("UserProfessions");
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.PurchaseTarget", b =>
                {
                    b.Navigation("PurchaseObjectiveHistories");
                });

            modelBuilder.Entity("FinWiseFinance.Core.Entities.User", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("DailyExpenses");

                    b.Navigation("InstallmentBills");

                    b.Navigation("PurchaseObjectiveHistories");

                    b.Navigation("PurchaseTargets");

                    b.Navigation("UserProfessions");
                });
#pragma warning restore 612, 618
        }
    }
}
